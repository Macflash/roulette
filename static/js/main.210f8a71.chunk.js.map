{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["EVEN_NUMBERS","ODD_NUMBERS","RED_NUMBERS","GOLD_NUMBERS","FIRST_12","SECOND_12","THIRD_12","ONE_TO_18","NINETEEN_TO_36","ROW_1","ROW_2","ROW_3","GetColor","n","indexOf","Number","IsRed","RollWheel","num","Math","floor","random","console","error","BET_PAYOUTS","straight","split","street","square","six","Reds","Blacks","Evens","Odds","Lows","Highs","Dozens","Columns","CHIP_DATA_KEY","UNORDERED_ARRAY_EQUAL","a","b","filter","ax","includes","length","bx","Bet","props","onDrop","ev","preventDefault","dataTransfer","getData","undefined","onDragOver","onClick","style","cursor","flex","marginLeft","margin","color","name","textShadow","backgroundColor","border","alignItems","display","justifyContent","minWidth","minHeight","outline","roll","outlineOffset","flexDirection","placedBets","type","winsOn","map","Chip","index","chipIndex","size","winningBets","wb","CHIP_COLORS","marginTop","CHIP_VALUES","BetRow","content","betProps","start","i","push","onBet","InsideBets","width","CHIP_TEXT_COLOR","draggable","onDragStart","setData","toString","height","borderRadius","marginBottom","boxShadow","Or0","x","Equal0Undefined","Minus0Undefined","ChipArea","React","useState","currentChips","setCurrentChips","log","chips","chipsChanging","max","diffs","abs","DIFF_ARRAYS","useEffect","newLocalChips","incSize","min","setTimeout","maxIndex","forEach","v","c","columns","curCol","stackSize","padding","paddingBottom","borderLeft","borderRight","position","newChips","setChips","dropEffect","top","textAlign","left","right","WinsOnToType","DEFAULT_CHIPS","App","hasSpun","setHasSpun","hasBet","setHasBet","setRoll","bets","setBets","setShowWinnings","totalMoney","reduce","p","addBet","useCallback","bet","moveChip","createBetProps","className","marginRight","title","rollResult","wonBet","fontWeight","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.210f8a71.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst EVEN_NUMBERS = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36];\nconst ODD_NUMBERS = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35];\n\nconst RED_NUMBERS = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\nconst GOLD_NUMBERS = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35];\n\nconst FIRST_12 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst SECOND_12 = [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\nconst THIRD_12 = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n\nconst ONE_TO_18 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\nconst NINETEEN_TO_36 = [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n\nconst ROW_1 = [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34];\nconst ROW_2 = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35];\nconst ROW_3 = [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36];\n\nfunction IsRed(n: number | string) {\n  return RED_NUMBERS.indexOf(Number(n)) >= 0;\n}\n\nfunction GetColor(n: number | string) {\n  return IsRed(n) ? \"rgb(255,80,80)\" : \"gold\"\n}\n\nfunction RollWheel(): number {\n  const num = Math.floor(Math.random() * 37) - 1;\n  if (num < 0 || num > 36) {\n    console.error(\"WOAH!! What are the odds??\");\n    return RollWheel();\n  }\n  return num;\n}\n\nexport const INSIDE_BET_PAYOUTS = {\n  // Insides\n  straight: 35, // 1 number\n  split: 17, // 2 numbers\n  street: 11, // 3 numbers\n  square: 8, // 4 numbers\n  six: 5, // ...realy? its 6 numbers duh\n}\n\nexport const OUTSIDE_BET_PAYOUTS = {\n  // Outsides\n  Reds: 1,\n  Blacks: 1,\n  Evens: 1,\n  Odds: 1,\n  Lows: 1,\n  Highs: 1,\n  Dozens: 2,\n  Columns: 2\n}\n\nexport type PAYOUTS = typeof INSIDE_BET_PAYOUTS & typeof OUTSIDE_BET_PAYOUTS;\n\nexport const BET_PAYOUTS: PAYOUTS = {\n  ...INSIDE_BET_PAYOUTS,\n  ...OUTSIDE_BET_PAYOUTS,\n};\n\nexport type BetTypes = keyof PAYOUTS;\n\nconst CHIP_DATA_KEY = \"text\";\n\nfunction UNORDERED_ARRAY_EQUAL(a: number[], b: number[]) {\n  return a.filter(ax => b.includes(ax)).length == a.length && b.filter(bx => a.includes(bx)).length == b.length;\n}\n\nfunction Bet(props: {\n  onClick?: () => void,\n  name: string | number,\n  color?: string,\n  flex?: number | string,\n  margin?: number,\n  type?: BetTypes,\n  winsOn?: number[],\n  onDrop?: (index: number) => void,\n  placedBets?: PlacedBet[],\n  winningBets?: PlacedBet[],\n  roll?: number,\n}) {\n  return <div\n    onDrop={props.onDrop ? (ev) => {\n      ev.preventDefault();\n      props.onDrop?.(Number(ev.dataTransfer.getData(CHIP_DATA_KEY)));\n    } : undefined}\n    onDragOver={props.onDrop ? (ev) => {\n      ev.preventDefault();\n    } : undefined}\n    onClick={props.onClick}\n    style={{\n      cursor: props.onClick ? \"pointer\" : undefined,\n      flex: props.flex,\n      marginLeft: props.margin,\n      color: props.color || GetColor(props.name),\n      textShadow: `1px 2px rgba(0,0,0,.7)`,\n      backgroundColor: \"green\",\n      border: \"1px solid gold\",\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      minWidth: 70,\n      minHeight: 70,\n      outline: props.roll == props.name ? \"10px solid gold\" : undefined,\n      outlineOffset: -10,\n    }}>\n    {props.name}\n    {/* This is for PLACED BETS, only straight and other types currently. all other smaller inside bets arent done... */}\n    <div style={{ display: \"flex\", flexDirection: \"column-reverse\" }}>\n      {props.placedBets?.filter(b => {\n        return b.type == \"straight\" && b.winsOn.includes(Number(props.name));\n      }).map(b => <Chip index={b.chipIndex} size={20} />)}\n    </div>\n    <div style={{ display: \"flex\", flexDirection: \"column-reverse\" }}>\n      {props.winsOn && props.placedBets?.filter(b => {\n        return b.type == props.type && UNORDERED_ARRAY_EQUAL(b.winsOn, props.winsOn!);\n      }).map(b => <Chip index={b.chipIndex} size={20} />)}\n    </div>\n\n    <div style={{ display: \"flex\", flexDirection: \"column-reverse\" }}>\n      {props.winsOn && props.winningBets?.filter(wb => {\n        return wb.type == props.type && UNORDERED_ARRAY_EQUAL(wb.winsOn, props.winsOn!);\n      }).map(wb => <div style={{ color: CHIP_COLORS[wb.chipIndex], marginTop: -20}}>+${(CHIP_VALUES[wb.chipIndex]) * (BET_PAYOUTS[wb.type] + 1)}</div>)}\n    </div>\n  </div>\n}\n\nfunction BetRow(props: {\n  start: number,\n  length: number,\n  startColor?: string,\n  onBet?: (betIndexes: number[], chipIndex: number) => void,\n  placedBets?: PlacedBet[],\n  winningBets?: PlacedBet[],\n  roll?: number,\n}) {\n  const content = [];\n  const { placedBets, winningBets, roll } = props;\n  const betProps = { placedBets, winningBets, roll };\n  for (var i = 0; i < props.length; i++) {\n    const num = props.start + i;\n    content.push(<Bet\n      {...betProps}\n      name={num}\n      onDrop={props.onBet ? (chipIndex) => { props.onBet?.([num], chipIndex); } : undefined}\n    />)\n  }\n  return <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n    {content}\n  </div>\n}\n\nfunction InsideBets(props: {\n  onBet: (winsOnIndexes: number[], chipIndex: number) => void,\n  placedBets?: PlacedBet[],\n  winningBets?: PlacedBet[],\n  roll?: number,\n}) {\n  const { placedBets, winningBets, roll } = props;\n  const betProps = { placedBets, winningBets, roll };\n  const rows = 3;\n  const cols = 36 / rows;\n  const content = [<Bet name=\"0\" {...betProps} />];\n  for (var i = 0; i < cols; i++) {\n    if (i % 4 == 0) {\n      content.push(<div style={{ width: 4, backgroundColor: \"green\" }}></div>)\n    }\n    content.push(<BetRow {...betProps} start={i * rows + 1} length={rows} onBet={props.onBet} />)\n  }\n  content.push(<div style={{ width: 4, backgroundColor: \"green\" }}></div>)\n  return <div style={{ display: \"inline-flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n    {content}\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <Bet {...betProps} name=\"2to1\" type=\"Columns\" winsOn={ROW_1} onDrop={props.onBet ? (chipIndex) => { props.onBet(ROW_1, chipIndex) } : undefined} />\n      <Bet {...betProps} name=\"2to1\" type=\"Columns\" winsOn={ROW_2} onDrop={props.onBet ? (chipIndex) => { props.onBet(ROW_2, chipIndex) } : undefined} />\n      <Bet {...betProps} name=\"2to1\" type=\"Columns\" winsOn={ROW_3} onDrop={props.onBet ? (chipIndex) => { props.onBet(ROW_3, chipIndex) } : undefined} />\n    </div>\n  </div>\n}\n\nconst CHIP_VALUES = [1, 5, 25, 50, 100, 500, 1000];\nconst CHIP_COLORS = [\"white\", \"red\", \"blue\", \"orange\", \"grey\", \"teal\", \"lightgreen\"];\nconst CHIP_TEXT_COLOR = [\"black\", \"white\", \"white\", \"black\", \"white\", \"white\", \"black\"];\n\nfunction Chip(props: {\n  index: number,\n  size?: number,\n  onClick?: () => void,\n  draggable?: boolean,\n}) {\n  const size = props.size || 50;\n  return <div\n    draggable={props.draggable}\n    onDragStart={props.draggable ? (ev) => {\n      ev.dataTransfer.setData(CHIP_DATA_KEY, props.index.toString());\n    } : undefined}\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: CHIP_TEXT_COLOR[props.index],\n      height: size,\n      width: size,\n      cursor: props.draggable ? \"grab\" : undefined,\n      borderRadius: size,\n      backgroundColor: CHIP_COLORS[props.index],\n      marginBottom: -.85 * size,\n      border: `2px solid black`,\n      boxShadow: '0px 3px 0px black',\n    }}>\n    {size > 30 ? CHIP_VALUES[props.index] : undefined}\n  </div>\n}\n\nfunction Or0(x?: number){\n  return x || 0;\n}\n\nfunction Equal0Undefined(a: number, b: number){\n  return Or0(a) == Or0(b);\n}\n\nfunction Minus0Undefined(a:number, b: number){\n  return Or0(a) - Or0(b)\n}\n\n// 0 and undefined are equivalent\nfunction DIFF_ARRAYS(a: number[], b:number[]){\n  const length = Math.max(a.length, b.length);\n  let diffs = 0;\n  for(let i = 0; i < length; i++){\n    if(!Equal0Undefined(a[i], b[i])){\n      diffs += Math.abs(Minus0Undefined(a[i], b[i]));\n    }\n  }\n\n  return diffs;\n}\n\n// This is gross lol\nfunction ChipArea(props: {\n  chips: number[],\n  onClick?: (index: number) => void,\n  setChips?: (newChips: number[]) => void,\n}) {\n\n  const [currentChips, setCurrentChips] = React.useState([0,0,0,0,0,0,0,0,0,0,0]);\n\n  console.log(props.chips, currentChips);\n\n  const chipsChanging = DIFF_ARRAYS(currentChips, props.chips);\n  React.useEffect(()=>{\n    if(chipsChanging){\n      console.log(`Updating chips ${chipsChanging}`);\n      const newLocalChips = [...currentChips];\n\n      let incSize = 1;\n      if(chipsChanging > 10){\n        incSize = 5;\n      }\n      if(chipsChanging > 25){\n        incSize = 10;\n      }\n      if(chipsChanging > 50){\n        incSize = 25;\n      }\n\n      // go from bottom to top and add one at a time\n      for(let i = 10; i >= 0; i--){\n        if(Or0(currentChips[i]) > Or0(props.chips[i])){\n          newLocalChips[i] = Or0(newLocalChips[i]);\n          // min of the DIFF from \n          // used to be --!\n          newLocalChips[i] -= Math.min(incSize, Or0(newLocalChips[i]) - Or0(props.chips[i]));\n          setTimeout(()=>{\n            setCurrentChips(newLocalChips);\n          }, 100);\n          return;\n        }\n        else if((currentChips[i]||0) < (props.chips[i]||0)){\n          newLocalChips[i] = newLocalChips[i] || 0;\n          //newLocalChips[i]++;\n          newLocalChips[i] += Math.min(incSize, Or0(props.chips[i]) - Or0(newLocalChips[i]) );\n          setTimeout(()=>{\n            setCurrentChips(newLocalChips);\n          }, 100);\n          return;\n        }\n      }\n    }\n    else {\n      console.log(\"DONE?\");\n    }\n  }, [currentChips, props.chips, chipsChanging]);\n\n  // only show co0;\n  let maxIndex = 0;\n  currentChips.forEach((v,i) => {\n    if(v > 0){ maxIndex = i;}\n  });\n  console.log(maxIndex);\n\n  return <div style={{ display: \"flex\", backgroundColor: \"green\", justifyContent: \"center\", height: 200, marginTop: 10 }}>\n    {currentChips.filter((c,i)=> i <= maxIndex+1).map((c, i) => {\n      let columns = [];\n      let curCol = [];\n      const stackSize = 10;\n      for (let x = 0; x < c; x++) {\n        if (x % stackSize == 0 && curCol.length > 0) {\n          columns.push(<div style={{\n            display: \"flex\",\n            flexDirection: \"column-reverse\",\n            margin: 2,\n          }}>{curCol}</div>);\n          curCol = [];\n        }\n        curCol.push(<Chip index={i} draggable={!chipsChanging && (x == c - 1 || x % stackSize == stackSize - 1)} />)\n      }\n      if (curCol.length > 0) {\n        columns.push(<div style={{\n          display: \"flex\",\n          flexDirection: \"column-reverse\",\n          margin: 2,\n        }}>{curCol}</div>);\n      }\n      return <><div style={{\n        display: \"flex\",\n        minWidth: 80,\n        justifyContent: \"center\",\n        padding: 10,\n        paddingBottom: 50,\n        margin: 2,\n        borderLeft: \"1px solid gold\",\n        borderRight: \"1px solid gold\", position: \"relative\"\n      }}>\n        <div\n          onDrop={ev => {\n            ev.preventDefault();\n            const chipIndex = Number(ev.dataTransfer.getData(CHIP_DATA_KEY));\n            if (chipIndex != i) {\n              console.log(`Trading chip ${chipIndex} ($${CHIP_VALUES[chipIndex]}) for ${i} ($${CHIP_VALUES[i]})`);\n              if (chipIndex < i) {\n                // we are trading in for a bigger coin\n                if (props.chips[chipIndex] * CHIP_VALUES[chipIndex] >= CHIP_VALUES[i]) {\n                  const newChips = [...props.chips];\n                  newChips[i] = Or0(newChips[i]);\n                  newChips[chipIndex] = Or0(newChips[chipIndex]);\n\n                  newChips[chipIndex] -= Math.floor(CHIP_VALUES[i] / CHIP_VALUES[chipIndex]);\n                  newChips[i]++;\n                  props.setChips?.(newChips);\n                }\n              }\n              else {\n                // we are trading for a lower coin\n                // this is probably OK, since we should be dragging it FROM the stack...\n                if (props.chips[chipIndex] > 0) {\n                  const newChips = [...props.chips];\n                  newChips[i] = Or0(newChips[i]);\n                  newChips[chipIndex] = Or0(newChips[chipIndex]);\n\n                  newChips[chipIndex]--;\n                  newChips[i] += Math.floor(CHIP_VALUES[chipIndex] / CHIP_VALUES[i]);\n                  props.setChips?.(newChips);\n                }\n              }\n            }\n          }}\n          onDragOver={ev => {\n            const chipIndex = Number(ev.dataTransfer.getData(CHIP_DATA_KEY));\n            if (chipIndex != i) {\n              console.log(`Trading chip ${chipIndex} ($${CHIP_VALUES[chipIndex]}) for ${i} ($${CHIP_VALUES[i]})`);\n              if (chipIndex < i) {\n                // we are trading in for a bigger coin\n                if (props.chips[chipIndex] * CHIP_VALUES[chipIndex] >= CHIP_VALUES[i]) {\n                  ev.preventDefault();\n                  ev.dataTransfer.dropEffect = \"copy\";\n                }\n              }\n              else {\n                // we are trading for a lower coin\n                // this is probably OK, since we should be dragging it FROM the stack...\n                if (props.chips[chipIndex] > 0) {\n                  ev.preventDefault();\n                  ev.dataTransfer.dropEffect = \"copy\";\n                }\n              }\n            }\n          }}\n          style={{ position: \"absolute\", top: 0, textAlign: \"center\", left: 0, right: 0, }}>${CHIP_VALUES[i]}</div>\n        {columns}\n      </div>\n        {/* {props.setChips && props.chips[i + 1] != undefined ?\n          <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", margin: 10, }}>\n            {props.chips[i + 1] > 0 ? <div>\n              <button onClick={()=>{\n                const newChips = [...props.chips];\n                newChips[i+1]--;\n                newChips[i] += Math.floor(CHIP_VALUES[i+1] / CHIP_VALUES[i]);\n                props.setChips?.(newChips);\n              }} style={{ fontSize: 14 }}>{\"<--\"}</button></div> : undefined}\n            {(props.chips[i] * CHIP_VALUES[i] >= CHIP_VALUES[i + 1]) ? <div>\n              <button  onClick={()=>{\n                const newChips = [...props.chips];\n                newChips[i] -= Math.floor(CHIP_VALUES[i+1] / CHIP_VALUES[i]);\n                newChips[i+1]++;\n                props.setChips?.(newChips);\n              }} style={{ fontSize: 14 }}>{\"-->\"}</button></div>: undefined}\n          </div> \n          : undefined} */}\n      </>;\n    })}\n  </div>\n}\n\ninterface PlacedBet {\n  type: BetTypes,\n  chipIndex: number,\n  winsOn: number[],\n}\n\nfunction WinsOnToType(winsOn: number[]): BetTypes {\n  switch (winsOn.length) {\n    case 1:\n      return \"straight\";\n    case 2:\n      return \"split\";\n    case 3:\n      return \"street\";\n    case 4: return \"square\";\n    case 12: return \"Columns\";\n    default:\n      throw \"HEY! bad type!\";\n  }\n}\n\nconst DEFAULT_CHIPS = [10, 5, 1];\n\nfunction App() {\n  const [hasSpun, setHasSpun] = React.useState(false);\n  const [hasBet, setHasBet] = React.useState(false);\n  const [roll, setRoll] = React.useState(0);\n  const [bets, setBets] = React.useState<PlacedBet[]>([]);\n  const [chips, setChips] = React.useState([...DEFAULT_CHIPS]);\n\n  const [winningBets, setShowWinnings] = React.useState<PlacedBet[]>([]);\n\n  const totalMoney = chips.reduce((p, c, i) => {\n    return p + (c * CHIP_VALUES[i]);\n  }, 0);\n\n  const addBet = React.useCallback((bet: PlacedBet) => {\n    setHasBet(true);\n    setBets([...bets, bet]);\n  }, [bets, setBets]);\n\n  const moveChip = (chipIndex: number) => {\n    let c = [...chips];\n    c[chipIndex] = Math.max(0, c[chipIndex] - 1);\n    setChips(c);\n  }\n\n  function createBetProps(winsOn: number[], type: BetTypes) {\n    return {\n      winsOn,\n      type,\n      onDrop: (chipIndex: number) => {\n        addBet({ chipIndex, winsOn, type });\n        moveChip(chipIndex);\n      },\n      placedBets: bets,\n      winningBets,\n      roll,\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", margin: \"10px 50px\" }}>\n        <h1 style={{ marginRight: \"auto\", position: \"absolute\", left: 50 }}>Roulette</h1>\n\n        <button title=\"Spin the wheel\" style={{ borderRadius: 100, display: \"flex\", alignItems: \"center\", justifyContent: \"center\", textAlign: \"center\", height: 90, width: 90, color: GetColor(roll) }} onClick={() => {\n          setHasSpun(true);\n          const rollResult = RollWheel();\n          setRoll(rollResult);\n\n          // hmm, we need to like... animate this?\n\n          // check all bets\n          const winningBets = bets.filter(b => b.winsOn.includes(rollResult));\n          setShowWinnings(winningBets);\n          setBets([]);\n\n          // ok pay them out!\n          const newChips = [...chips];\n          for (const wonBet of winningBets) {\n            newChips[wonBet.chipIndex] += BET_PAYOUTS[wonBet.type] + 1; // 1 is YOUR chip which you get back.\n            // WOW, winning a bet pays a LOT for a number.\n          }\n          setChips(newChips);\n        }}>{roll}</button>\n\n        {!hasSpun ? <div style={{ color: \"white\", fontWeight: 300, fontSize: 18, marginLeft: 0, position: \"absolute\", left: \"calc(50% + 60px)\" }}> {\" <-- Click to spin the wheel\"} </div> : undefined}\n\n        <div style={{ backgroundColor: \"green\", fontSize: 24, padding: 10, color: \"gold\", marginLeft: \"auto\", right: 50, position: \"absolute\" }}>\n          $<span style={{ textShadow: \"1px 2px rgba(0,0,0,.5)\" }}>{totalMoney}</span>\n        </div>\n      </div>\n      <div style={{ display: \"inline-flex\", flexDirection: \"column\" }}>\n        <InsideBets placedBets={bets} roll={roll} winningBets={winningBets} onBet={(winsOn, chipIndex) => {\n          moveChip(chipIndex);\n          // OK we really need a way to IDENTIFY the different BETS. Like an ID or code.\n          addBet({\n            chipIndex,\n            type: WinsOnToType(winsOn),\n            winsOn,\n          })\n        }} />\n        <div style={{ display: \"flex\", justifyContent: \"end\", marginTop: 4 }}>\n          <div style={{ flex: 1 }}></div>\n          <Bet name=\"1st 12\" flex=\"4\" margin={4} {...createBetProps(FIRST_12, \"Dozens\")} />\n          <Bet name=\"2nd 12\" flex=\"4\" margin={4} {...createBetProps(SECOND_12, \"Dozens\")} />\n          <Bet name=\"3rd 12\" flex=\"4\" margin={4}  {...createBetProps(THIRD_12, \"Dozens\")} />\n          <div style={{ width: 4 }}></div>\n          <div style={{ flex: 1 }}></div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"end\", marginTop: 4 }}>\n          <div style={{ flex: 1 }}></div>\n          <Bet name=\"1-18\" flex={2} margin={4}  {...createBetProps(ONE_TO_18, \"Lows\")} />\n          <Bet name=\"EVEN\" flex={2} margin={4} {...createBetProps(EVEN_NUMBERS, \"Evens\")} />\n          <Bet name=\"RED\" color=\"red\" flex={2} margin={4} {...createBetProps(RED_NUMBERS, \"Reds\")} />\n          <Bet name=\"GOLD\" flex={2} margin={4}  {...createBetProps(GOLD_NUMBERS, \"Blacks\")} />\n          <Bet name=\"ODD\" flex={2} margin={4}  {...createBetProps(ODD_NUMBERS, \"Odds\")} />\n          <Bet name=\"19-36\" flex={2} margin={4}  {...createBetProps(NINETEEN_TO_36, \"Highs\")} />\n          <div style={{ width: 4 }}></div>\n          <div style={{ flex: 1 }}></div>\n        </div>\n      </div>\n\n      <ChipArea chips={chips} setChips={setChips} />\n      {!hasBet ? <div style={{ color: \"white\", fontWeight: 300, fontSize: 18 }}> {\"Drag your chips to a square to place bets. Or drag between columns to exchange for different chips.\"} </div> : undefined}\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}